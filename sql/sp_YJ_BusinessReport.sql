--经营分析报表
ALTER PROC sp_YJ_BusinessReport
	@OrgNo VARCHAR(255) = '',
	@BeginTime VARCHAR(255) = '',
	@EndTime VARCHAR(255) = ''
AS
BEGIN
	DECLARE @OrgId INT = 0
	IF(@OrgNo <> '')
	BEGIN
		SELECT @OrgId = FORGID FROM T_ORG_ORGANIZATIONS WHERE FNUMBER = @OrgNo
	END	

	CREATE TABLE #TEMP(
		FRowType INT DEFAULT 0, --0:普通数据，1:合计数据
		FCustID INT,
		FCustName VARCHAR(255),
		FMaterialID INT,
		FUnitID INT, --基本单位
		FLotID INT, --基本单位
		FSUPPLYID INT DEFAULT 0,--供应商
		FCounterOrgID INT DEFAULT 0,--对应组织
		FLotText VARCHAR(255), --基本单位
		FBaseQty DECIMAL(28,10) DEFAULT 0, --数量-盒
		FNoTaxRecAmount DECIMAL(28,10) DEFAULT 0, --未税收入
		FNoTaxPayAmount DECIMAL(28,10) DEFAULT 0, --未税成本
		FProfit DECIMAL(28,10) DEFAULT 0, --毛利额
		FProfitRate DECIMAL(28,10) DEFAULT 0, --毛利率
		FNoTaxHandRecAmount DECIMAL(28,10) DEFAULT 0, --未税收入-促销补差
		FQDProfitRate DECIMAL(28,10) DEFAULT 0, --渠道毛利率

		FCCF DECIMAL(28,10) DEFAULT 0, --仓储费
		FWLF DECIMAL(28,10) DEFAULT 0, --物流费
		FYPF DECIMAL(28,10) DEFAULT 0, --样品费
		FBXF DECIMAL(28,10) DEFAULT 0, --报销费
		FJCF DECIMAL(28,10) DEFAULT 0, --检测费
		FBZF DECIMAL(28,10) DEFAULT 0, --包装费
		FJGF DECIMAL(28,10) DEFAULT 0, --加工费
		FSJF DECIMAL(28,10) DEFAULT 0, --设计费
		FKDF DECIMAL(28,10) DEFAULT 0, --快递费
		FZXF DECIMAL(28,10) DEFAULT 0, --装卸费
		FQGZF DECIMAL(28,10) DEFAULT 0, --清关杂费
		FFLF DECIMAL(28,10) DEFAULT 0, --返利
		FQTF DECIMAL(28,10) DEFAULT 0, --其他
		FHTF DECIMAL(28,10) DEFAULT 0, --渠道费用合计

		FBusProfit DECIMAL(28,10) DEFAULT 0, --营业利润额
		FBusProfitRate DECIMAL(28,10) DEFAULT 0, --渠道营业利润率
	)

	CREATE TABLE #AcctNo(
		FNumber VARCHAR(255))

	INSERT INTO #TEMP (
		FCustID,FMaterialID,FUnitID,FLotID,FLotText,FSUPPLYID
	   ,FBaseQty,FNoTaxRecAmount,FNoTaxPayAmount)
	SELECT  A.FCUSTOMERID,B.FMATERIALID,FBASEUNITID,B.FLOT,B.FLOT_TEXT,ISNULL(D.FSUPPLYID,0)
	       ,SUM(B.FBASEMUSTQTY),SUM(C.FAMOUNT),SUM(C.FCOSTAMOUNT)
	  FROM  T_SAL_OUTSTOCK A WITH(NOLOCK)
			INNER JOIN T_SAL_OUTSTOCKENTRY B WITH(NOLOCK)
			ON A.FID = B.FID
			INNER JOIN T_SAL_OUTSTOCKENTRY_F C WITH(NOLOCK)
			ON B.FENTRYID = C.FENTRYID
			LEFT JOIN T_BD_LOTMASTER D WITH(NOLOCK)
			ON B.FLOT = D.FLOTID
	 WHERE  ((A.FSALEORGID = @OrgId AND @OrgId <> 0 ) OR @OrgId = 0)
	   AND  ((A.FDATE >= @BeginTime AND @BeginTime <> '') OR @BeginTime = '')
	   AND  ((A.FDATE < @EndTime AND @EndTime <> '') OR @EndTime = '')
	 GROUP  BY A.FCUSTOMERID,B.FMATERIALID,B.FLOT,B.FLOT_TEXT,B.FBASEUNITID,D.FSUPPLYID

	--根据供应商获取对应组织
	UPDATE A SET FCounterOrgID = 0 FROM #TEMP A INNER JOIN T_BD_SUPPLIER B ON A.FSUPPLYID = B.FSUPPLIERID
	--供应商为内部供应商时，获取内部供应商对应公司的销售出库成本
	UPDATE #TEMP SET FNoTaxPayAmount = 0 WHERE FCounterOrgID <> 0
	UPDATE  A
	   SET  FNoTaxPayAmount = B.FCostPrice
	  FROM  #TEMP A
			INNER JOIN (SELECT A.FSALEORGID,A.FCUSTOMERID,B.FLOT,B.FMATERIALID,SUM(C.FCOSTPRICE)FCostPrice
						  FROM  T_SAL_OUTSTOCK A
								INNER JOIN T_SAL_OUTSTOCKENTRY B
								ON A.FID = B.FID
								INNER JOIN T_SAL_OUTSTOCKENTRY_F C
								ON B.FENTRYID = C.FENTRYID
						 GROUP  BY A.FSALEORGID,A.FCUSTOMERID,B.FLOT,B.FMATERIALID)B
			ON A.FCustID = B.FCUSTOMERID AND A.FLotID = B.FLOT AND A.FMaterialID = B.FMATERIALID

	--获取客户名称
	UPDATE A SET FCustName = B.FNAME FROM #TEMP A INNER JOIN T_BD_CUSTOMER_L B ON A.FCustID = B.FCUSTID AND B.FLOCALEID = 2052


	---------------------------------------------------------------------------------------------------------------
	--计算客户小计
	---------------------------------------------------------------------------------------------------------------
	INSERT INTO #TEMP (FRowType,FCustID,FCustName,FBaseQty,FNoTaxRecAmount,FNoTaxPayAmount)
	SELECT 1,FCustID,FCustName + '合计',SUM(FBaseQty),SUM(FNoTaxRecAmount),SUM(FNoTaxPayAmount)
	  FROM #TEMP 
	 GROUP BY FCustID,FCustName


	SELECT  B.FCURRENCYID,E.FNUMBER,D.FFLEX6,ISNULL(SUM(FCREDIT),0)FCREDIT,ISNULL(SUM(FDEBIT),0)FDEBIT,ISNULL(SUM(FAMOUNTFOR),0)FAMOUNTFOR
	  INTO  #VoucherData
	  FROM  T_GL_VOUCHER A WITH(NOLOCK)
			INNER JOIN T_GL_VOUCHERENTRY B WITH(NOLOCK)
			ON A.FVOUCHERID = B.FVOUCHERID
			INNER JOIN T_BD_ACCOUNTBOOK C WITH(NOLOCK)
			ON A.FACCOUNTBOOKID = C.FBOOKID
			INNER JOIN T_BD_FLEXITEMDETAILV D WITH(NOLOCK)
			ON B.FDETAILID = D.FID
			INNER JOIN T_BD_ACCOUNT E WITH(NOLOCK)
			ON B.FACCOUNTID = E.FACCTID
	 WHERE  1=1
	   AND  (E.FNUMBER LIKE '6601.%' OR E.FNUMBER LIKE '6602.%' OR E.FNUMBER = '6603.04' OR E.FNUMBER = '6401.03')
	   AND  A.FDOCUMENTSTATUS = 'C'
	 GROUP  BY B.FCURRENCYID,E.FNUMBER,D.FFLEX6

	--仓储费
	UPDATE  A
	   SET  A.FCCF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER IN ('6601.07','6601.29') 
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--物流费
	UPDATE  A
	   SET  A.FWLF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER IN ('6601.06','6601.19','6601.27') 
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--样品费
	UPDATE  A
	   SET  A.FYPF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER IN ('6401.03','6601.13') 
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--报销费用
	UPDATE  A
	   SET  A.FBXF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER IN ('6601.05','6602.08','6601.09','6602.09','6601.11','6601.25','6602.12') 
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--检测费
	UPDATE  A
	   SET  A.FJCF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER IN ('6601.14','6601.22') 
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--包装费
	UPDATE  A
	   SET  A.FBZF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER = '6601.15'
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--加工费
	UPDATE  A
	   SET  A.FJGF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER = '6601.20'
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--设计费
	UPDATE  A
	   SET  A.FSJF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER = '6601.16'
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--快递费
	UPDATE  A
	   SET  A.FKDF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER = '6601.17'
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--装卸费
	UPDATE  A
	   SET  A.FZXF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER = '6601.21'
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--清关杂费
	UPDATE  A
	   SET  A.FQGZF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER = '6601.28'
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--返利
	UPDATE  A
	   SET  A.FFLF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER = '6601.24'
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1

	--其他
	UPDATE  A
	   SET  A.FQTF = B.FDEBIT
	  FROM  #TEMP A
			INNER JOIN (SELECT FFLEX6,SUM(FDEBIT)FDEBIT 
						  FROM #VoucherData 
					     WHERE FNUMBER IN ('6601.08','6601.12','6601.23','6603.04','6602.16') 
						 GROUP BY FFLEX6) B
			ON A.FCustID = B.FFLEX6
	 WHERE  A.FRowType = 1
	
	SELECT * FROM #TEMP ORDER BY FCustID,FRowType
END